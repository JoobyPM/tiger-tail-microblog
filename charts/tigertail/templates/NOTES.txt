1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "tigertail.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "tigertail.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "tigertail.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "tigertail.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Database Information:
{{- if .Values.postgresql.enabled }}
   PostgreSQL is deployed as part of this release.
   - Host: {{ .Release.Name }}-postgresql
   - Port: {{ .Values.postgresql.service.port }}
   - Username: {{ .Values.postgresql.auth.username }}
   - Database: {{ .Values.postgresql.auth.database }}
   
   To connect to your database from outside the cluster:
   kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ .Release.Name }}-postgresql {{ .Values.postgresql.service.port }}:{{ .Values.postgresql.service.port }}
{{- else }}
   Using external PostgreSQL database at {{ .Values.config.database.host }}:{{ .Values.config.database.port }}
{{- end }}

3. Cache Information:
{{- if .Values.redis.enabled }}
   Redis is deployed as part of this release.
   - Host: {{ .Release.Name }}-redis-master
   - Port: {{ .Values.redis.master.service.port }}
   
   To connect to your Redis from outside the cluster:
   kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ .Release.Name }}-redis-master {{ .Values.redis.master.service.port }}:{{ .Values.redis.master.service.port }}
{{- else if .Values.config.cache.enabled }}
   Using external Redis cache at {{ .Values.config.cache.host }}:{{ .Values.config.cache.port }}
{{- else }}
   Cache is disabled for this deployment.
{{- end }}
